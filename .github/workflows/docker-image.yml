name: BookJS CI/CD Pipeline

on:
  push:
    branches: [ "master" ]

env:
  IMAGE_NAME: ${{ secrets.DOCKER_SERVICE }}/xpan/book-js

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 新增凭证助手配置
      - name: Configure Docker credentials helper
        run: |
          mkdir -p ~/.docker
          echo '{"credsStore":"pass"}' > ~/.docker/config.json

      - name: Login to Private Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_SERVICE }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH Deployment
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_PASSWORD }}
          port: ${{ secrets.HOST_PORT }}
          script: |
            # 新增部署前置检查
            DEPLOY_DIR="/srv/bookjs"
            COMPOSE_FILE="$DEPLOY_DIR/docker-compose.yaml"

            # 确保目录存在
            sudo mkdir -p $DEPLOY_DIR && cd $DEPLOY_DIR

            # 带错误处理的克隆操作
            if [ ! -d .git ]; then
              git clone https://github.com/panxuesen/book-js.git . --depth 1
            else
              git fetch origin && git reset --hard origin/master
            fi

            # 验证 compose 文件存在
            if [ ! -f "$COMPOSE_FILE" ]; then
              echo "❌ Missing $COMPOSE_FILE"
              ls -lah $DEPLOY_DIR
              exit 1
            fi

            # 部署命令
            docker stack deploy \
              --compose-file $COMPOSE_FILE \
              --with-registry-auth \
              bookjs_stack
